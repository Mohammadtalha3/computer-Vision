from cv2 import cvtColor
import numpy as np
import cv2 as cv 

def slider():
    pass 

path= "recourses/image.jpg"

cv.namedWindow("Bars")
cv.resizeWindow("Bars", 600,300)

cv.createTrackbar("Hue Min","Bars", 0,179,slider)
cv.createTrackbar("Hue Max","Bars",179,179,slider)
cv.createTrackbar("sat Min","Bars",0,255,slider)
cv.createTrackbar("sat Max","Bars",255,255,slider)
cv.createTrackbar("Val Min","Bars",0,255,slider)
cv.createTrackbar("Val Max","Bars",255,255,slider)
img= cv.imread(path)
hsv_img= cv.cvtColor(img,cv.COLOR_BGR2HSV)
while True:
    img= cv.imread(path)
    hsv_img= cv.cvtColor(img, cv.COLOR_BGR2HSV)
    hue_min= cv.getTrackbarPos("Hue Min","Bars")
    hue_max= cv.getTrackbarPos("Hue Max","Bars")
    sat_min= cv.getTrackbarPos("sat Min","Bars")
    sat_max= cv.getTrackbarPos("sat Max","Bars")
    val_min=cv.getTrackbarPos("Val Min","Bars")
    val_max= cv.getTrackbarPos("Val Max","Bars")
    print(hue_min,hue_max, sat_min,sat_max,val_min,val_max)
#to display the changes inside the omage
    lower= np.array([hue_min,sat_min,val_min])
    higher= np.array([hue_max,sat_max,val_max])
    mask_img= cv.inRange(hsv_img, lower, higher)
    out_img= cv.bitwise_and(img,img,mask=mask_img)

    cv.imshow("original", img)
    cv.imshow("hsv",hsv_img)
    cv.imshow("mask",mask_img)
    cv.imshow("finalimage",out_img)
    if cv.waitKey(1)& 0xFF==ord('q'):
        break
        
cv.destroyAllWindows()
